import { DataTypes, Sequelize } from "sequelize";
import { CommomAuditAltModel } from "./commom/commom-audit-alt-model";
import { WaCondicaoValorModel } from "./wa-condicao-valor-model";
import { WaOperadorModel } from "./wa-operador-model";
import { WaVariavelModel } from "./wa-variavel-model";

export class WaCondicaoModel extends CommomAuditAltModel {
    declare idRegra?: number | null;
    declare idVariavel?: number | null;
    declare waVariavel?: WaVariavelModel | null;
    declare idOperador?: number | null;
    declare waOperador?: WaOperadorModel | null;
    declare waCondicaoValorList?: WaCondicaoValorModel[] | null;
}

export default (sequelize: Sequelize): typeof WaCondicaoModel => {
    WaCondicaoModel.init({
        id: {
            field: "id",
            type: DataTypes.BIGINT,
            autoIncrement: true,
            primaryKey: true,
        },
        usuarioInclusao: {
            field: "idUsuarioInclusao",
            type: DataTypes.BIGINT,
        },
        dataInclusao: {
            field: "dataInclusao",
            type: DataTypes.STRING,
        },
        usuarioExclusao: {
            field: "idUsuarioExclusao",
            type: DataTypes.BIGINT,
        },
        dataExclusao: {
            field: "dataExclusao",
            type: DataTypes.STRING,
        },
        usuarioAlteracao: {
            field: "idUsuarioAlteracao",
            type: DataTypes.BIGINT,
        },
        dataAlteracao: {
            field: "dataAlteracao",
            type: DataTypes.STRING,
        },
        idRegra: {
            field: "idRegra",
            type: DataTypes.BIGINT,
        },
    }, {
        sequelize, /* We need to pass the connection instance */
        tableName: "wa_condicao",
        timestamps: false,
        version: "numVersao",
    });
    WaCondicaoModel.associate = (models: {
        WaVariavelModel: typeof WaVariavelModel,
        WaOperadorModel: typeof WaOperadorModel,
        WaCondicaoValorModel: typeof WaCondicaoValorModel
    }) => {
        WaCondicaoModel.belongsTo(models.WaVariavelModel, {
            as: "waVariavel",
            foreignKey: {
                name: "idVariavel",
                field: "idVariavel",
            },
        });
        WaCondicaoModel.belongsTo(models.WaOperadorModel, {
            as: "waOperador",
            foreignKey: {
                name: "idOperador",
                field: "idOperador",
            },
        });
        WaCondicaoModel.hasMany(models.WaCondicaoValorModel, {
            as: "waCondicaoValorList",
            foreignKey: {
                name: "idCondicao",
                field: "idCondicao",
                allowNull: false,
            },
            onUpdate: "CASCADE",
            onDelete: "CASCADE",
            hooks: true,
        });
    };
    return WaCondicaoModel;
};
