import { DataTypes, Sequelize } from "sequelize";
import { CommomAuditAltModel } from "./commom/commom-audit-alt-model";
import { PesContatoModel } from "./pes-contato-model";
import { PesEnderecoModel } from "./pes-endereco-model";

export class PesPessoaModel extends CommomAuditAltModel {
    declare descTipoPessoa?: string | null;
    declare flagFuncionario?: boolean | null;
    declare flagFornecedor?: boolean | null;
    declare flagCliente?: boolean | null;
    declare descDocumentoIdentificacao?: string | null;
    declare descNomeRazaoSocial?: string | null;
    declare descApelidoNomeFantasia?: string | null;
    declare descRgInscricaoEstadual?: string | null;
    declare descInscricaoMunicipal?: string | null;
    declare dataNascimento?: Date | null;
    declare descSexo?: string | null;
    declare descEmail?: string | null;
    declare descContato?: string | null;
    declare flagProspeccao?: boolean | null;
    declare flagAtendenteTmk?: boolean | null;
    declare pesContatoList?: PesContatoModel[] | null;
    declare pesEnderecoList?: PesEnderecoModel[] | null;
}

export default (sequelize: Sequelize): typeof PesPessoaModel => {
    PesPessoaModel.init({
        id: {
            field: "id",
            type: DataTypes.BIGINT,
            autoIncrement: true,
            primaryKey: true,
        },
        usuarioInclusao: {
            field: "idUsuarioInclusao",
            type: DataTypes.BIGINT,
        },
        dataInclusao: {
            field: "dataInclusao",
            type: DataTypes.STRING,
        },
        usuarioExclusao: {
            field: "idUsuarioExclusao",
            type: DataTypes.BIGINT,
        },
        dataExclusao: {
            field: "dataExclusao",
            type: DataTypes.STRING,
        },
        usuarioAlteracao: {
            field: "idUsuarioAlteracao",
            type: DataTypes.BIGINT,
        },
        dataAlteracao: {
            field: "dataAlteracao",
            type: DataTypes.STRING,
        },
        descTipoPessoa: {
            field: "descTipoPessoa",
            type: DataTypes.STRING,
        },
        flagFuncionario: {
            field: "flagFuncionario",
            type: DataTypes.BOOLEAN,
        },
        flagFornecedor: {
            field: "flagFornecedor",
            type: DataTypes.BOOLEAN,
        },
        flagCliente: {
            field: "flagCliente",
            type: DataTypes.BOOLEAN,
        },
        descDocumentoIdentificacao: {
            field: "descDocumentoIdentificacao",
            type: DataTypes.STRING,
        },
        descNomeRazaoSocial: {
            field: "descNomeRazaoSocial",
            type: DataTypes.STRING,
        },
        descApelidoNomeFantasia: {
            field: "descApelidoNomeFantasia",
            type: DataTypes.STRING,
        },
        descRgInscricaoEstadual: {
            field: "descRgInscricaoEstadual",
            type: DataTypes.STRING,
        },
        descInscricaoMunicipal: {
            field: "descInscricaoMunicipal",
            type: DataTypes.STRING,
        },
        dataNascimento: {
            field: "dataNascimento",
            type: DataTypes.DATEONLY,
        },
        descSexo: {
            field: "descSexo",
            type: DataTypes.STRING,
        },
        descEmail: {
            field: "descEmail",
            type: DataTypes.STRING,
        },
        descContato: {
            field: "descContato",
            type: DataTypes.STRING,
        },
        flagProspeccao: {
            field: "flagProspeccao",
            type: DataTypes.BOOLEAN,
        },
        flagAtendenteTmk: {
            field: "flagAtendenteTmk",
            type: DataTypes.BOOLEAN,
        },
    }, {
        sequelize, /* We need to pass the connection instance */
        tableName: "pes_pessoa",
        timestamps: false,
        version: "numVersao",
    });
    PesPessoaModel.associate = (models: {
        PesContatoModel: typeof PesContatoModel,
        PesEnderecoModel: typeof PesEnderecoModel
    }) => {
        PesPessoaModel.hasMany(models.PesContatoModel, {
            as: "pesContatoList",
            foreignKey: {
                name: "idPessoa",
                field: "idPessoa",
            },
            hooks: true,
        });
        PesPessoaModel.hasMany(models.PesEnderecoModel, {
            as: "pesEnderecoList",
            foreignKey: {
                name: "idPessoa",
                field: "idPessoa",
            },
            hooks: true,
        });
    };
    return PesPessoaModel;
};
